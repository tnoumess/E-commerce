<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-4.1.xsd 
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.1.xsd">
      
	<context:property-placeholder ignore-resource-not-found="false" location="classpath:remoteEye.properties" />
	<context:annotation-config/>
	
	<!-- <bean id="cartController" class="edu.gmu.infs640.proofofconcept.controller.CartController" scope="session">
     </bean> -->
	
	<bean id="productInjector" class="edu.gmu.infs640.proofofconcept.persistence.ProductInjector">
		<constructor-arg ref="productDAO" />
		<constructor-arg>
			<list>
				<bean class="edu.gmu.infs640.proofofconcept.persistence.jpa.Product">
					<constructor-arg value="Motorola1"/>		
					<constructor-arg value="Motorola Baby Monitor"/>
					<constructor-arg value="images/Motorolla_Baby.png"/>
					<constructor-arg value="Simple and affordable, also portable with RemoteEye® services. Excellent for monitoring your little loved ones."/>
					<constructor-arg value="64.99"/>
				</bean>
				<bean class="edu.gmu.infs640.proofofconcept.persistence.jpa.Product">
					<constructor-arg value="Motorola2"/>		
					<constructor-arg value="Motorola Extra Outdoor Camera"/>
					<constructor-arg value="images/Motorolla_Adv.png"/>
					<constructor-arg value="Powerful and for the outdoors, portable with RemoteEye® services. Excellent for monitoring your little loved ones while outdoors. Could also be used for monitoring pets outside."/>
					<constructor-arg value="119.99"/>
				</bean>				
				<bean class="edu.gmu.infs640.proofofconcept.persistence.jpa.Product">
					<constructor-arg value="USBBox1"/>		
					<constructor-arg value="USB Wireless Box Thingy"/>
					<constructor-arg value="images/Nokia.jpg"/>
					<constructor-arg value="Plug in your existing web cam to this thing and it wirelessly transmit to your router"/>
					<constructor-arg value="49.99"/>
				</bean>		
				<bean class="edu.gmu.infs640.proofofconcept.persistence.jpa.Product">
					<constructor-arg value="y_free"/>		
					<constructor-arg value="FREE TRIAL"/>
					<constructor-arg value=""/>
					<constructor-arg value="Access to two tiers ViewNow and StoreNView capabilities as listed below.Free trial will end after 7 days, after which you can choose between two tiers."/>
					<constructor-arg value="0.00"/>
				</bean>	
				<bean class="edu.gmu.infs640.proofofconcept.persistence.jpa.Product">
					<constructor-arg value="y_medium"/>		
					<constructor-arg value="SATURN"/>
					<constructor-arg value=""/>
					<constructor-arg value="Click and stream from any computer to view from your selected camera."/>
					<constructor-arg value="9.99"/>
				</bean>	
				<bean class="edu.gmu.infs640.proofofconcept.persistence.jpa.Product">
					<constructor-arg value="y_exelence"/>		
					<constructor-arg value="JUPITER"/>
					<constructor-arg value=""/>
					<constructor-arg value="Unlimited access to recorded media any time within 30 days."/>
					<constructor-arg value="44.99"/>
				</bean>
							
			</list>
		</constructor-arg>
	</bean>
	
	<!-- Persistence -->
	<bean id="userDAO" class="edu.gmu.infs640.proofofconcept.persistence.UserDaoImpl"/>
	<bean id="orderDAO" class="edu.gmu.infs640.proofofconcept.persistence.OrderDaoImpl"/>
	<bean id="orderdescriptionDAO" class="edu.gmu.infs640.proofofconcept.persistence.OrderDescriptionDaoImpl"/>
	<bean id="productDAO" class="edu.gmu.infs640.proofofconcept.persistence.ProductDaoImpl"/>
	
	<bean id="myEmf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="edu.gmu.infs640.proofofconcept.persistence.jpa" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="${build.db.showsql}" />
				<property name="generateDdl" value="${build.db.generateddl}" />
				<property name="databasePlatform" value="${build.db.dialect}" />	
			</bean>
		</property>
	</bean>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${build.db.driver}" />
		<property name="url" value="${build.db.url}" />
		<property name="username" value="${build.db.user}" />
		<property name="password" value="${build.db.passwd}" />
	</bean>
 
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="myEmf" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="txManager" /> 	
      
</beans>
